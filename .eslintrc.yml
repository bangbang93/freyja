env:
  browser: true
  es6: true
  node: true
extends:
  - 'eslint:recommended'
  - 'plugin:@typescript-eslint/eslint-recommended'
  - 'plugin:@typescript-eslint/recommended'
  - 'plugin:vue/recommended'
plugins:
  - vue
  - '@typescript-eslint'
parserOptions:
  project: ./tsconfig.json
  parser: '@typescript-eslint/parser'
rules:
  array-bracket-newline: [error, consistent]
  array-bracket-spacing: [error, never]
  array-element-newline: [error, consistent]
  array-callback-return: error
  arrow-parens: [error, always]
  arrow-spacing: error
  block-spacing: [error, never]
  brace-style: [error, 1tbs, {allowSingleLine: true}]
  camelcase: [error, {properties: always}]
  callback-return: error
  comma-dangle: [error, always-multiline]
  comma-spacing: [error, {before: false, after: true}]
  comma-style: [error, last]
  computed-property-spacing: [error, never]
  class-methods-use-this: warn
  complexity: warn
  curly: [error, multi-line]
  default-case: error
  dot-location: [error, property]
  eol-last: [error, always]
  eqeqeq: error
  func-name-matching: [error, always]
  func-names: [error, as-needed]
  function-paren-newline: [error, consistent]
  generator-star-spacing: error
  handle-callback-err: error
  implicit-arrow-linebreak: error
  indent: off
  key-spacing:
    - error
    - beforeColon: false
      afterColon: true
      mode: strict
  keyword-spacing: error
  linebreak-style: [error, unix]
  lines-between-class-members: error
  max-len: [error, 120]
  new-cap: [warn, {properties: false}]
  new-parens: error
  newline-per-chained-call: [error, {ignoreChainWithDepth: 3}]
  no-array-constructor: error
  no-buffer-constructor: error
  no-caller: error
  no-console: error
  no-div-regex: warn
  no-duplicate-imports: [error]
  no-extra-bind: error
  no-extra-label: error
  no-else-return: error
  no-floating-decimal: error
  no-implied-eval: error
  no-invalid-this: error
  no-label-var: error
  no-lone-blocks: error
  no-lonely-if: error
  no-loop-func: error
  no-mixed-requires: error
  no-multiple-empty-lines: [error, {maxEOF: 1, maxBOF: 0, max: 2}]
  no-nested-ternary: error
  no-new: error
  no-new-object: error
  no-new-require: error
  no-new-wrappers: error
  no-path-concat: error
  no-proto: error
  no-return-assign: [error, always]
  no-return-await: error
  no-self-compare: error
  no-sequences: error
  no-template-curly-in-string: error
  no-throw-literal: error
  no-trailing-spaces: error
  no-unneeded-ternary: error
  no-useless-call: error
  no-useless-computed-key: error
  no-useless-concat: error
  no-useless-return: error
  no-useless-rename: error
  no-var: error
  no-void: error
  no-whitespace-before-property: error
  object-curly-newline: [error, {consistent: true}]
  object-curly-spacing: [error, never]
  object-shorthand: [error, always]
  one-var: [error, never]
  operator-assignment: [error, always]
  operator-linebreak: [error, before]
  padded-blocks: [error, never]
  prefer-arrow-callback: [error, {allowNamedFunctions: true}]
  prefer-const: [error, {ignoreReadBeforeAssign: true}]
  prefer-object-spread: error
  prefer-named-capture-group: warn
  prefer-numeric-literals: error
  prefer-promise-reject-errors: error
  prefer-rest-params: error
  prefer-spread: error
  prefer-template: error
  quotes: [error, single]
  quote-props: [error, consistent-as-needed]
  radix: error
  rest-spread-spacing: error
  require-atomic-updates: off
  sort-imports: [error, {ignoreDeclarationSort: true, ignoreCase: true}]
  space-before-blocks: [error, always]
  space-before-function-paren: [error, {anonymous: always, named: never, asyncArrow: always}]
  space-in-parens: [error, never]
  space-infix-ops: error
  space-unary-ops: error
  symbol-description: error
  switch-colon-spacing: error
  template-curly-spacing: error
  template-tag-spacing: error
  unicode-bom: error
  yield-star-spacing: error
  '@typescript-eslint/await-thenable': error
  '@typescript-eslint/consistent-type-definitions': [error, interface]
  '@typescript-eslint/explicit-function-return-type': [warn, {allowExpressions: true}]
  '@typescript-eslint/func-call-spacing': [error, never]
  '@typescript-eslint/generic-type-naming': error
  '@typescript-eslint/indent': [error, 2]
  '@typescript-eslint/interface-name-prefix': [error, always]
  '@typescript-eslint/member-delimiter-style':
    - error
    - multiline:
        delimiter: none
        requireLast: false
      singleline:
        delimiter: semi
        requireLast: false
  '@typescript-eslint/member-ordering': error
  '@typescript-eslint/no-extraneous-class': error
  '@typescript-eslint/no-extra-parens': warn
  '@typescript-eslint/no-floating-promises': warn
  '@typescript-eslint/no-for-in-array': error
  '@typescript-eslint/no-magic-numbers': [warn, {ignoreEnums: true, ignoreNumericLiteralTypes: true}]
  #  '@typescript-eslint/no-misused-promises': error
  '@typescript-eslint/no-parameter-properties': off
  '@typescript-eslint/no-this-alias': error
  '@typescript-eslint/no-use-before-define': [error, {functions: false, typedefs: false}]
  '@typescript-eslint/no-unnecessary-type-assertion': error
  '@typescript-eslint/no-useless-constructor': error
  '@typescript-eslint/prefer-for-of': error
  '@typescript-eslint/prefer-function-type': error
  '@typescript-eslint/prefer-includes': error
  '@typescript-eslint/prefer-string-starts-ends-with': error
  '@typescript-eslint/promise-function-async': [error, {allowAny: true}]
  '@typescript-eslint/restrict-plus-operands': error
  '@typescript-eslint/semi': [error, never]
  #  '@typescript-eslint/unbound-method': error
  '@typescript-eslint/unified-signatures': error
